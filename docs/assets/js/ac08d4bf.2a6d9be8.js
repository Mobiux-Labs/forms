"use strict";(self.webpackChunkform_docs=self.webpackChunkform_docs||[]).push([[3731],{9833:(e,o,i)=>{i.r(o),i.d(o,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>t,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"form-renderer/fields/core/radio","title":"Radio Field","description":"The Radio Field component is a versatile form element that allows users to select a single option from a predefined set of choices. It is designed to work seamlessly with React Hook Form and TypeScript, providing customizable styles and properties for a tailored user experience.","source":"@site/docs/form-renderer/fields/core/radio.md","sourceDirName":"form-renderer/fields/core","slug":"/form-renderer/fields/core/radio","permalink":"/forms/docs/form-renderer/fields/core/radio","draft":false,"unlisted":false,"editUrl":"https://github.com/Mobiux-Labs/forms/tree/main/docs/docs/form-renderer/fields/core/radio.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_label":"Radio","sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Checkbox","permalink":"/forms/docs/form-renderer/fields/core/checkbox"},"next":{"title":"File","permalink":"/forms/docs/form-renderer/fields/core/file"}}');var r=i(4848),s=i(8453);const t={sidebar_label:"Radio",sidebar_position:6},l="Radio Field",a={},d=[{value:"Features",id:"features",level:2},{value:"Usage",id:"usage",level:2}];function c(e){const o={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.header,{children:(0,r.jsx)(o.h1,{id:"radio-field",children:"Radio Field"})}),"\n",(0,r.jsx)(o.p,{children:"The Radio Field component is a versatile form element that allows users to select a single option from a predefined set of choices. It is designed to work seamlessly with React Hook Form and TypeScript, providing customizable styles and properties for a tailored user experience."}),"\n",(0,r.jsx)(o.h2,{id:"features",children:"Features"}),"\n",(0,r.jsxs)(o.ul,{children:["\n",(0,r.jsx)(o.li,{children:"Supports multiple options for selection."}),"\n",(0,r.jsx)(o.li,{children:"Customizable styles for input, label, error messages, and option labels."}),"\n",(0,r.jsx)(o.li,{children:"Optional label and onChange handler for enhanced functionality."}),"\n",(0,r.jsx)(o.li,{children:"Visibility control to show or hide the field."}),"\n",(0,r.jsx)(o.li,{children:"Integration with React Hook Form for form state management."}),"\n"]}),"\n",(0,r.jsx)(o.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsxs)(o.p,{children:["To use the Radio Field, define a field object with the necessary properties. Below is an example of how to define a Radio Field using the ",(0,r.jsx)(o.code,{children:"RadioFieldDefinition"})," type:"]}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-tsx",children:"{\n    formKey: 'subscription', // Unique identifier for the field\n    type: 'radio', // Field type\n    style: {\n        input: 'input-radio-class',\n        label: 'label-class',\n        error: 'error-class',\n        optionLabel: 'option-label-class',\n    },\n    fieldProps: {\n        options: [\n            {\n                value: 'basic',\n                label: 'Basic',\n            },\n            {\n                value: 'standard',\n                label: 'Standard',\n            },\n            {\n                value: 'premium',\n                label: 'Premium',\n            },\n        ],\n    },\n    onChange: (value: boolean) => console.log(value), // optional\n    label: 'Subscription Plan', // optional\n    disabled: false, // optional\n    visibility: 'visible', // optional\n    className: 'custom-radio-class', // optional\n    rules: {\n        required: 'Please select a subscription plan', // optional\n    }\n}\n"})})]})}function p(e={}){const{wrapper:o}={...(0,s.R)(),...e.components};return o?(0,r.jsx)(o,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,o,i)=>{i.d(o,{R:()=>t,x:()=>l});var n=i(6540);const r={},s=n.createContext(r);function t(e){const o=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function l(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),n.createElement(s.Provider,{value:o},e.children)}}}]);