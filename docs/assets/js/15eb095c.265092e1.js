"use strict";(self.webpackChunkform_docs=self.webpackChunkform_docs||[]).push([[281],{4387:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>t,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"form-renderer/basics/form-renderer","title":"Form Renderer","description":"The FormRenderer initializes the form environment using react-hook-form, integrates with the global context, and acts as a wrapper for multiple FormFields to manage form state and submission.","source":"@site/docs/form-renderer/basics/form-renderer.md","sourceDirName":"form-renderer/basics","slug":"/form-renderer/basics/form-renderer","permalink":"/forms/docs/form-renderer/basics/form-renderer","draft":false,"unlisted":false,"editUrl":"https://github.com/Mobiux-Labs/forms/tree/main/docs/docs/form-renderer/basics/form-renderer.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_label":"Form Renderer","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Form Provider","permalink":"/forms/docs/form-renderer/basics/form-provider"},"next":{"title":"Form Fields","permalink":"/forms/docs/form-renderer/basics/form-fields"}}');var o=n(4848),i=n(8453);const t={sidebar_label:"Form Renderer",sidebar_position:2},l="Form Renderer",d={},a=[{value:"Key Responsibilities",id:"key-responsibilities",level:2},{value:"Core Props",id:"core-props",level:2},{value:"Usage",id:"usage",level:2},{value:"Example",id:"example",level:3},{value:"Conclusion",id:"conclusion",level:2}];function c(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"form-renderer",children:"Form Renderer"})}),"\n",(0,o.jsxs)(r.p,{children:["The ",(0,o.jsx)(r.code,{children:"FormRenderer"})," initializes the form environment using ",(0,o.jsx)(r.code,{children:"react-hook-form"}),", integrates with the global context, and acts as a wrapper for multiple ",(0,o.jsx)(r.code,{children:"FormFields"})," to manage form state and submission."]}),"\n",(0,o.jsx)(r.h2,{id:"key-responsibilities",children:"Key Responsibilities"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Form Setup"}),": Initializes and manages form state using ",(0,o.jsx)(r.code,{children:"react-hook-form"}),"."]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Context Integration"}),": Stores form-specific states and methods in the global context via ",(0,o.jsx)(r.code,{children:"FormProvider"}),"."]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Wrapper Component"}),": Encapsulates ",(0,o.jsx)(r.code,{children:"FormFields"}),", which render the actual form elements."]}),"\n"]}),"\n",(0,o.jsx)(r.h2,{id:"core-props",children:"Core Props"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.code,{children:"formName: string"})}),": Unique identifier for the form in the context."]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.code,{children:"onSubmit: SubmitHandler<FieldValue<any>>"})}),": Function to handle form submission."]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.code,{children:"validationSchema?: any"})}),": Optional schema for form validation."]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.code,{children:"styles: { [key: string]: string }"})}),": Style classes for the form."]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.code,{children:"className?: string"})}),": Additional class names for styling."]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.code,{children:"defaultValues?: { [key: string]: string }"})}),": Default values for form fields."]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:(0,o.jsx)(r.code,{children:"disabled?: boolean"})}),": Disables form fields if set to true."]}),"\n"]}),"\n",(0,o.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsxs)(r.p,{children:["The ",(0,o.jsx)(r.code,{children:"FormRenderer"})," should be used within a ",(0,o.jsx)(r.code,{children:"FormProvider"})," to ensure proper context management and can contain multiple ",(0,o.jsx)(r.code,{children:"FormFields"}),"."]}),"\n",(0,o.jsx)(r.h3,{id:"example",children:"Example"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-tsx",children:"import React from 'react';\nimport { FormRenderer } from '@mobiux-labs/form-core';\n\nconst MyForm = () => {\n  const handleSubmit = (data: any) => {\n    console.log('Form submitted:', data);\n  };\n\n  return (\n    <FormRenderer\n      formName='myForm'\n      onSubmit={handleSubmit}\n      styles={{ input: 'input-class', button: 'button-class' }}\n      defaultValues={{ name: '', email: '' }}\n    >\n      {/* FormFields components goes here. You can have multiple FormField. */}\n    </FormRenderer>\n  );\n};\n\nexport default MyForm;\n"})}),"\n",(0,o.jsx)(r.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,o.jsxs)(r.p,{children:["The ",(0,o.jsx)(r.code,{children:"FormRenderer"})," is essential for preparing the form environment and managing form state, serving as a wrapper for ",(0,o.jsx)(r.code,{children:"FormFields"})," to render form elements effectively."]})]})}function m(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>t,x:()=>l});var s=n(6540);const o={},i=s.createContext(o);function t(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);