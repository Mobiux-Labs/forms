"use strict";(self.webpackChunkform_docs=self.webpackChunkform_docs||[]).push([[483],{6641:(e,o,r)=>{r.r(o),r.d(o,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"form-renderer/fields/core/checkbox","title":"Checkbox Field","description":"The Checkbox Field component is a flexible form element that allows users to toggle a boolean value. It integrates seamlessly with React Hook Form and TypeScript, offering customizable styles and properties for a tailored user experience.","source":"@site/docs/form-renderer/fields/core/checkbox.md","sourceDirName":"form-renderer/fields/core","slug":"/form-renderer/fields/core/checkbox","permalink":"/forms/docs/form-renderer/fields/core/checkbox","draft":false,"unlisted":false,"editUrl":"https://github.com/Mobiux-Labs/forms/tree/main/docs/docs/form-renderer/fields/core/checkbox.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_label":"Checkbox","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Array","permalink":"/forms/docs/form-renderer/fields/core/array"},"next":{"title":"Radio","permalink":"/forms/docs/form-renderer/fields/core/radio"}}');var i=r(4848),s=r(8453);const t={sidebar_label:"Checkbox",sidebar_position:5},l="Checkbox Field",a={},c=[{value:"Features",id:"features",level:2},{value:"Usage",id:"usage",level:2}];function d(e){const o={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(o.header,{children:(0,i.jsx)(o.h1,{id:"checkbox-field",children:"Checkbox Field"})}),"\n",(0,i.jsx)(o.p,{children:"The Checkbox Field component is a flexible form element that allows users to toggle a boolean value. It integrates seamlessly with React Hook Form and TypeScript, offering customizable styles and properties for a tailored user experience."}),"\n",(0,i.jsx)(o.h2,{id:"features",children:"Features"}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsx)(o.li,{children:"Supports boolean values for toggling."}),"\n",(0,i.jsx)(o.li,{children:"Customizable styles for input, label, and error messages."}),"\n",(0,i.jsx)(o.li,{children:"Optional label and onChange handler for enhanced functionality."}),"\n",(0,i.jsx)(o.li,{children:"Visibility control to show or hide the field."}),"\n",(0,i.jsx)(o.li,{children:"Integration with React Hook Form for form state management."}),"\n"]}),"\n",(0,i.jsx)(o.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(o.p,{children:["To use the Checkbox Field, define a field object with the necessary properties. Below is an example of how to define a Checkbox Field using the ",(0,i.jsx)(o.code,{children:"CheckboxFieldDefinition"})," type:"]}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-tsx",children:"{\n  formKey: 'acceptTerms', // Unique identifier for the field\n  type: 'checkbox', // Field type\n  style: {\n    input: 'checkbox-input-class', // optional\n    label: 'checkbox-label-class', // optional\n    error: 'checkbox-error-class', // optional\n  },\n  fieldProps: {\n    checked: false, // optional\n  },\n  onChange: (value: boolean) => console.log(value), // optional\n  label: 'Accept Terms and Conditions', // optional\n  disabled: false, // optional\n  visibility: 'visible', // optional\n  className: 'custom-checkbox-class', // optional\n  rules: {\n    required: 'This field is required', // optional\n  },\n}\n"})})]})}function h(e={}){const{wrapper:o}={...(0,s.R)(),...e.components};return o?(0,i.jsx)(o,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,o,r)=>{r.d(o,{R:()=>t,x:()=>l});var n=r(6540);const i={},s=n.createContext(i);function t(e){const o=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function l(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),n.createElement(s.Provider,{value:o},e.children)}}}]);