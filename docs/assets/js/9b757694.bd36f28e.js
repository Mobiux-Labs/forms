"use strict";(self.webpackChunkform_docs=self.webpackChunkform_docs||[]).push([[886],{4436:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Installation","href":"/forms/docs/getting-started/installation","docId":"getting-started/installation","unlisted":false},{"type":"link","label":"Quick Start Guide: Login Form","href":"/forms/docs/getting-started/sample","docId":"getting-started/sample","unlisted":false},{"type":"link","label":"Architecture","href":"/forms/docs/getting-started/architecture","docId":"getting-started/architecture","unlisted":false}],"href":"/forms/docs/getting-started/"},{"type":"category","label":"Form Renderer","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Basics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Form Provider","href":"/forms/docs/form-renderer/basics/form-provider","docId":"form-renderer/basics/form-provider","unlisted":false},{"type":"link","label":"Form Renderer","href":"/forms/docs/form-renderer/basics/form-renderer","docId":"form-renderer/basics/form-renderer","unlisted":false},{"type":"link","label":"Form Fields","href":"/forms/docs/form-renderer/basics/form-fields","docId":"form-renderer/basics/form-fields","unlisted":false}],"href":"/forms/docs/category/basics"},{"type":"category","label":"Features","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Dependent Field","href":"/forms/docs/form-renderer/features/dependent-fields","docId":"form-renderer/features/dependent-fields","unlisted":false},{"type":"link","label":"Validation","href":"/forms/docs/form-renderer/features/validation","docId":"form-renderer/features/validation","unlisted":false},{"type":"link","label":"Visibility","href":"/forms/docs/form-renderer/features/visibility","docId":"form-renderer/features/visibility","unlisted":false},{"type":"link","label":"Disabled","href":"/forms/docs/form-renderer/features/disabled","docId":"form-renderer/features/disabled","unlisted":false},{"type":"link","label":"Custom Field","href":"/forms/docs/form-renderer/features/custom-field","docId":"form-renderer/features/custom-field","unlisted":false}],"href":"/forms/docs/category/features"},{"type":"category","label":"Fields","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Definition","href":"/forms/docs/form-renderer/fields/definition","docId":"form-renderer/fields/definition","unlisted":false},{"type":"category","label":"Core","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Input","href":"/forms/docs/form-renderer/fields/core/input","docId":"form-renderer/fields/core/input","unlisted":false},{"type":"link","label":"Textarea","href":"/forms/docs/form-renderer/fields/core/text-area","docId":"form-renderer/fields/core/text-area","unlisted":false},{"type":"link","label":"Button","href":"/forms/docs/form-renderer/fields/core/button","docId":"form-renderer/fields/core/button","unlisted":false}],"href":"/forms/docs/category/core"},{"type":"category","label":"Layout & Spacers","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Container","href":"/forms/docs/form-renderer/fields/layout-and-spacers/container","docId":"form-renderer/fields/layout-and-spacers/container","unlisted":false},{"type":"link","label":"Divider","href":"/forms/docs/form-renderer/fields/layout-and-spacers/divider","docId":"form-renderer/fields/layout-and-spacers/divider","unlisted":false}],"href":"/forms/docs/category/layout--spacers"},{"type":"category","label":"Typography","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Heading","href":"/forms/docs/form-renderer/fields/typography/heading","docId":"form-renderer/fields/typography/heading","unlisted":false},{"type":"link","label":"Paragraph","href":"/forms/docs/form-renderer/fields/typography/paragraph","docId":"form-renderer/fields/typography/paragraph","unlisted":false}],"href":"/forms/docs/category/typography"},{"type":"category","label":"Extended","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Intro","href":"/forms/docs/form-renderer/fields/extended/intro","docId":"form-renderer/fields/extended/intro","unlisted":false},{"type":"link","label":"Select","href":"/forms/docs/form-renderer/fields/extended/select","docId":"form-renderer/fields/extended/select","unlisted":false}],"href":"/forms/docs/category/extended"}],"href":"/forms/docs/category/fields"}],"href":"/forms/docs/category/form-renderer"},{"type":"link","label":"Form Builder","href":"/forms/docs/form-builder/","docId":"form-builder/form-builder","unlisted":false}]},"docs":{"form-builder/form-builder":{"id":"form-builder/form-builder","title":"Form Builder","description":"\ud83d\udea7 Coming Soon!","sidebar":"tutorialSidebar"},"form-renderer/basics/form-fields":{"id":"form-renderer/basics/form-fields","title":"Form Fields","description":"FormFields is a flexible component in Mobiux Labs Form that creates form elements from specified field definitions, integrating smoothly with the form\'s context.","sidebar":"tutorialSidebar"},"form-renderer/basics/form-provider":{"id":"form-renderer/basics/form-provider","title":"Form Provider","description":"The FormProvider is a core component in Mobiux Labs Form, managing form states, methods, and styles through a centralized React context.","sidebar":"tutorialSidebar"},"form-renderer/basics/form-renderer":{"id":"form-renderer/basics/form-renderer","title":"Form Renderer","description":"The FormRenderer initializes the form environment using react-hook-form, integrates with the global context, and acts as a wrapper for multiple FormFields to manage form state and submission.","sidebar":"tutorialSidebar"},"form-renderer/features/custom-field":{"id":"form-renderer/features/custom-field","title":"Custom Field","description":"Key Considerations","sidebar":"tutorialSidebar"},"form-renderer/features/dependent-fields":{"id":"form-renderer/features/dependent-fields","title":"Dependent Field","description":"This example demonstrates how to manage dependent fields using FormRenderer and FormFields from the @mobiux-labs/form-core package. The form dynamically updates the fullname field based on changes to the firstname and last_name fields.","sidebar":"tutorialSidebar"},"form-renderer/features/disabled":{"id":"form-renderer/features/disabled","title":"Disabled","description":"This documentation explains how to manage the disabled state of form fields using the @mobiux-labs/form-core package. The disabled property in the FieldDefinition type allows you to control whether a field is editable.","sidebar":"tutorialSidebar"},"form-renderer/features/validation":{"id":"form-renderer/features/validation","title":"Validation","description":"To implement validation rules in your form using the @mobiux-labs/form-core package, simply add these rules to the rules parameter of each FieldDefinition. The validation rules are integrated with react-hook-form and support various constraints, including:","sidebar":"tutorialSidebar"},"form-renderer/features/visibility":{"id":"form-renderer/features/visibility","title":"Visibility","description":"This documentation explains how to manage the visibility of form fields using the @mobiux-labs/form-core package. The visibility property in the FieldDefinition type allows you to control whether a field is displayed or hidden.","sidebar":"tutorialSidebar"},"form-renderer/fields/core/button":{"id":"form-renderer/fields/core/button","title":"button","description":"This field is not available now, it is still in development stage","sidebar":"tutorialSidebar"},"form-renderer/fields/core/input":{"id":"form-renderer/fields/core/input","title":"input","description":"This field is available as type input","sidebar":"tutorialSidebar"},"form-renderer/fields/core/text-area":{"id":"form-renderer/fields/core/text-area","title":"text-area","description":"This field is not available now, it is still in development stage","sidebar":"tutorialSidebar"},"form-renderer/fields/definition":{"id":"form-renderer/fields/definition","title":"Definition","description":"All fields are derived from the FieldDefinitionBase type, which serves as the foundation for defining form fields.","sidebar":"tutorialSidebar"},"form-renderer/fields/extended/intro":{"id":"form-renderer/fields/extended/intro","title":"Extended Fields","description":"Extended Fields are special components designed for @mobiux-labs/form-core that add extra fields to your forms. These fields rely on additional packages, so they\'re offered as separate libraries. This approach keeps the core package small and efficient. By using only the fields you need, you can maintain a minimal bundle size while still having a powerful form renderer.","sidebar":"tutorialSidebar"},"form-renderer/fields/extended/select":{"id":"form-renderer/fields/extended/select","title":"Select Field","description":"The Select Field component is a versatile field type for rendering dropdowns in forms. It leverages the react-select library to provide a rich set of features, including support for asynchronous loading, creatable options, and more.","sidebar":"tutorialSidebar"},"form-renderer/fields/layout-and-spacers/container":{"id":"form-renderer/fields/layout-and-spacers/container","title":"Container Field","description":"The Container field is a versatile component designed to group multiple form fields together, providing a structured layout with optional titles and descriptions. It allows for the organization of related fields within a form, enhancing readability and user experience.","sidebar":"tutorialSidebar"},"form-renderer/fields/layout-and-spacers/divider":{"id":"form-renderer/fields/layout-and-spacers/divider","title":"Divider Field","description":"The Divider field is a simple component used to visually separate sections within a form. It enhances the form\'s layout by providing a clear distinction between different groups of fields or content areas.","sidebar":"tutorialSidebar"},"form-renderer/fields/typography/heading":{"id":"form-renderer/fields/typography/heading","title":"Heading Field","description":"The Heading Field component is a versatile typography element designed to render headings in various styles and sizes. It allows you to specify the heading level and customize its appearance through styles and visibility options.","sidebar":"tutorialSidebar"},"form-renderer/fields/typography/paragraph":{"id":"form-renderer/fields/typography/paragraph","title":"Paragraph Field","description":"The Paragraph Field component is a typography element designed to render text paragraphs with customizable styles. It allows you to specify the text content and apply various styling options to enhance the visual presentation.","sidebar":"tutorialSidebar"},"getting-started/architecture":{"id":"getting-started/architecture","title":"Architecture","description":"Mobiux Labs Form simplifies form management in React applications with three core components: FormProvider, FormRenderer, and FormFields. This architecture supports client-side rendering only.","sidebar":"tutorialSidebar"},"getting-started/index":{"id":"getting-started/index","title":"Getting Started","description":"Welcome","sidebar":"tutorialSidebar"},"getting-started/installation":{"id":"getting-started/installation","title":"Installation","description":"To install Mobiux Labs Form, use npm or yarn. Run one of the following commands in your project directory:","sidebar":"tutorialSidebar"},"getting-started/sample":{"id":"getting-started/sample","title":"Quick Start Guide: Login Form","description":"This section demonstrates a basic implementation of a login form with the following fields:","sidebar":"tutorialSidebar"}}}}')}}]);