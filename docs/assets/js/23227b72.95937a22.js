"use strict";(self.webpackChunkform_docs=self.webpackChunkform_docs||[]).push([[7982],{3305:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"form-renderer/basics/form-provider","title":"Form Provider","description":"The FormProvider is a core component in Mobiux Labs Form, managing form states, methods, and styles through a centralized React context.","source":"@site/docs/form-renderer/basics/form-provider.md","sourceDirName":"form-renderer/basics","slug":"/form-renderer/basics/form-provider","permalink":"/forms/docs/form-renderer/basics/form-provider","draft":false,"unlisted":false,"editUrl":"https://github.com/Mobiux-Labs/forms/tree/main/docs/docs/form-renderer/basics/form-provider.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_label":"Form Provider","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Basics","permalink":"/forms/docs/category/basics"},"next":{"title":"Form Renderer","permalink":"/forms/docs/form-renderer/basics/form-renderer"}}');var s=n(4848),t=n(8453);const i={sidebar_label:"Form Provider",sidebar_position:1},a="Form Provider",d={},c=[{value:"Key Responsibilities",id:"key-responsibilities",level:2},{value:"Core Functions",id:"core-functions",level:2},{value:"Usage",id:"usage",level:2},{value:"Example",id:"example",level:3},{value:"Using getContext",id:"using-getcontext",level:3},{value:"Conclusion",id:"conclusion",level:2}];function l(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"form-provider",children:"Form Provider"})}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.code,{children:"FormProvider"})," is a core component in Mobiux Labs Form, managing form states, methods, and styles through a centralized React context."]}),"\n",(0,s.jsx)(r.h2,{id:"key-responsibilities",children:"Key Responsibilities"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Dedicated Form State"}),": Each form renderer has its own space for storing states and methods."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Global State Management"}),": Maintains consistent form behavior across the application."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Method Sharing"}),": Provides ",(0,s.jsx)(r.code,{children:"react-hook-form"})," methods for efficient form operations."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Style Management"}),": Ensures uniform styling across forms."]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"core-functions",children:"Core Functions"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.code,{children:"getContext(formName: string): StateData | undefined"})}),": Retrieves the state and methods for a specific form."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.code,{children:"setContext(formName: string, state: StateData): void"})}),": Updates the state and methods for a specific form."]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(r.p,{children:["Wrap ",(0,s.jsx)(r.code,{children:"FormProvider"})," around your application's root to enable form state management."]}),"\n",(0,s.jsx)(r.h3,{id:"example",children:"Example"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",children:"// App.tsx\n\nimport { FormProvider } from '@mobiux-labs/form-core';\n\nfunction App() {\n  return <FormProvider>{/* Your application components */}</FormProvider>;\n}\n\nexport default App;\n"})}),"\n",(0,s.jsx)(r.h3,{id:"using-getcontext",children:"Using getContext"}),"\n",(0,s.jsx)(r.p,{children:"Here's how you can use getContext to access a form's state and methods:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-tsx",children:"import React from 'react';\nimport { useFormContext } from '@mobiux-labs/form-core';\n\nconst MyFormComponent = () => {\n  const { getContext } = useFormContext();\n  const formName = 'myForm';\n  const formState = getContext(formName);\n\n  const { methods, styles, formData } = formState | {};\n  // Use methods, styles, and formData as needed\n\n  return <div>Form Component</div>;\n};\n\nexport default MyFormComponent;\n"})}),"\n",(0,s.jsx)(r.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.code,{children:"FormProvider"})," offers a robust solution for managing form states and methods, ensuring each form renderer has dedicated storage while maintaining global consistency."]})]})}function m(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>a});var o=n(6540);const s={},t=o.createContext(s);function i(e){const r=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(t.Provider,{value:r},e.children)}}}]);