"use strict";(self.webpackChunkform_docs=self.webpackChunkform_docs||[]).push([[172],{2926:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"form-renderer/fields/core/array","title":"Array Field","description":"The Array Field component is designed to handle dynamic arrays of form fields within a React form. It leverages the useFieldArray hook from react-hook-form to manage the addition and removal of fields, providing a flexible and customizable way to handle complex form structures.","source":"@site/docs/form-renderer/fields/core/array.md","sourceDirName":"form-renderer/fields/core","slug":"/form-renderer/fields/core/array","permalink":"/forms/docs/form-renderer/fields/core/array","draft":false,"unlisted":false,"editUrl":"https://github.com/Mobiux-Labs/forms/tree/main/docs/docs/form-renderer/fields/core/array.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_label":"Array","sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Button","permalink":"/forms/docs/form-renderer/fields/core/button"},"next":{"title":"Checkbox","permalink":"/forms/docs/form-renderer/fields/core/checkbox"}}');var t=n(4848),i=n(8453);const a={sidebar_label:"Array",sidebar_position:4},s="Array Field",l={},d=[{value:"Features",id:"features",level:2},{value:"Usage",id:"usage",level:2}];function c(e){const r={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"array-field",children:"Array Field"})}),"\n",(0,t.jsxs)(r.p,{children:["The Array Field component is designed to handle dynamic arrays of form fields within a React form. It leverages the ",(0,t.jsx)(r.code,{children:"useFieldArray"})," hook from ",(0,t.jsx)(r.code,{children:"react-hook-form"})," to manage the addition and removal of fields, providing a flexible and customizable way to handle complex form structures."]}),"\n",(0,t.jsx)(r.h2,{id:"features",children:"Features"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Dynamically add or remove fields within an array."}),"\n",(0,t.jsx)(r.li,{children:"Customizable rendering for add and remove buttons."}),"\n",(0,t.jsx)(r.li,{children:"Supports nested field definitions for complex form structures."}),"\n",(0,t.jsxs)(r.li,{children:["Integrates seamlessly with the ",(0,t.jsx)(r.code,{children:"FormFields"})," component for rendering child fields."]}),"\n",(0,t.jsxs)(r.li,{children:["Style customization through ",(0,t.jsx)(r.code,{children:"ArrayFieldStyleProps"}),"."]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(r.p,{children:"To use the Array Field component, define the field properties and styles as shown below:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:"{\n  formKey: 'members', // Unique identifier for the field\n  type: 'array',\n  style: {\n    container: 'array-container',\n    label: 'label-sm',\n    error: 'error-text',\n    addBtn: 'array-add-btn',\n    removeBtn: 'array-remove-btn',\n    title: 'array-title',\n    header: 'array-header',\n  },\n  className: 'mt-2 p-3 border border-[#00000030] rounded-md', // optional\n  fieldProps: {\n    title: 'Member', // optional\n    renderAddButton: (\n      <div className='flex justify-center items-center'>\n        Add\n      </div>\n    ), // optional\n    renderRemoveButton: (\n        <div className='flex justify-center items-center'>\n        Add\n      </div>\n    ), // optional\n    fields: [\n      {\n        formKey: 'name',\n        type: 'input',\n        label: 'Name', // optional\n        className: 'mt-1', // optional\n        rules: { required: 'This is required' }, // optional\n        style: {\n          input: 'input-md',\n          label: 'label-sm',\n          error: 'error-text',\n        },\n      },\n      {\n        formKey: 'email',\n        type: 'input',\n        label: 'Email', // optional\n        className: 'mt-1', // optional\n        style: {\n          input: 'input-md',\n          label: 'label-sm',\n          error: 'error-text',\n        },\n      },\n      {\n        formKey: 'password',\n        type: 'input',\n        label: 'Password', // optional\n        style: {\n          input: 'input-md',\n          label: 'label-sm',\n          error: 'error-text',\n        },\n      },\n    ],\n  },\n  label: 'Array Field Label', // optional\n  disabled: false, // optional\n  visibility: 'visible', // optional\n}\n"})})]})}function m(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>s});var o=n(6540);const t={},i=o.createContext(t);function a(e){const r=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),o.createElement(i.Provider,{value:r},e.children)}}}]);